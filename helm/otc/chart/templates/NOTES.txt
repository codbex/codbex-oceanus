{{- $ingressEnabled := (include "booleanToStringValue" (dict "value" .Values.ingress.enabled)) | trim }}
{{- $nginxEnabled := (include "booleanToStringValue" (dict "value" .Values.ingress.nginx.enabled)) | trim }}
{{- $cceEnabled := (include "booleanToStringValue" (dict "value" .Values.ingress.cce.enabled)) | trim }}
{{- $otcAutocreateEnabled := (include "booleanToStringValue" (dict "value" .Values.ingress.cce.autocreate)) | trim }}
{{- $tlsEnabled := (include "booleanToStringValue" (dict "value" .Values.ingress.tls.enabled)) | trim }}
{{- $certManagerEnabled := (include "booleanToStringValue" (dict "value" .Values.ingress.tls.certmanager.enabled)) | trim }}

CHART NAME: {{ .Chart.Name }}
CHART VERSION: {{ .Chart.Version }}
APP VERSION: {{ .Chart.AppVersion }}

** Please be patient while the chart is being deployed **

{{/* Section for CCE ingress and autocreation of ELB */}}
{{- if and (eq $ingressEnabled "true") (eq $cceEnabled "true") (eq $otcAutocreateEnabled "true") }}
1. Get the application URL by running:

    export ELB_IP=$(kubectl get ingress {{ .Values.name }}-ingress -o jsonpath='{.metadata.annotations.kubernetes\.io/elb\.ip}' -n {{ .Release.Namespace }})
    echo "Application URL: http://$ELB_IP:{{ .Values.ingress.port }}{{ .Values.ingress.path }}"
{{- end }}
{{/* Section for existing CCE ELB */}}
{{- if and (eq $ingressEnabled "true") (eq $cceEnabled "true") .Values.ingress.cce.existingELB.id (eq $tlsEnabled "false") }}
1. To access the application, open URL http://<elb-ip>:{{ .Values.ingress.port }}{{ .Values.ingress.path }} where <elb-ip> is the IP address of used OTC Elastic Load Balancer with id {{ .Values.ingress.cce.existingELB.id }}.
{{- end }}
{{/* Section for NGINX ingress without TLS */}}
{{- if and (eq $ingressEnabled "true") (eq $nginxEnabled "true") (eq $tlsEnabled "false") }}
1. Get the application URL by running:
    export ELB_IP=$(kubectl get ingress {{ .Values.name }}-ingress -o jsonpath='{.status.loadBalancer.ingress[1].ip}' -n {{ .Release.Namespace }})
    echo "Application URL: http://$ELB_IP:{{ .Values.ingress.port }}{{ .Values.ingress.path }}"

    NOTE: It may take a few seconds until the following command returns a correct URL.
{{- end }}

{{/* Section for configured TLS */}}
{{- if and (eq $ingressEnabled "true") (eq $tlsEnabled "true") .Values.ingress.tls.host }}
1. Open the application at URL https://{{ .Values.ingress.tls.host }}
    NOTE: It may take a few seconds until the application is started
{{- end }}

{{/* Section for LoadBalancer service */}}
{{- if eq .Values.service.type "LoadBalancer" }}
1. Get the application URL by running:

    export ELB_IP=$(kubectl get svc {{ .Values.name }}-svc -o jsonpath='{.status.loadBalancer.ingress[0].ip}'  -n {{ .Release.Namespace }})
    echo "Application URL: http://$ELB_IP:{{ .Values.service.ports.http }}"
{{- end }}
{{/* Disabled ingress. Only service is created */}}
{{- if and (eq $ingressEnabled "false") (eq .Values.service.type "NodePort") }}
1. The application is not publicly accessible. A service of type {{ .Values.service.type }} is created.
    To get the service IP execute the following:

    export SERVICE_IP=$(kubectl get svc {{ .Values.name }}-svc -o jsonpath='{.spec.clusterIP}' -n {{ .Release.Namespace }})
    echo "Service IP: $SERVICE_IP"
{{- end }}

NOTE: Default credentials are username `admin` and password `admin`, unless you have specified custom credentials via `security.authentication.basic.base64User` and `security.authentication.basic.base64Pass`.
